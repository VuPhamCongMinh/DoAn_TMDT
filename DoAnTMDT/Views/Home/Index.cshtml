@{
    ViewData["Title"] = "Trang Chủ - Đồ Án TMĐT";
}

<div class="p-b-10">
    <h3 class="ltext-103 cl5">
        Product Overview
    </h3>
</div>

<div class="flex-w flex-sb-m p-b-52">

    <div class="flex-w flex-l-m filter-tope-group m-tb-10">
        <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 how-active1" data-filter="name" data-order="asc">
            Sort by Name
        </button>

        <button class="stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5" data-filter="price" data-order="asc">
            Sort by Price
        </button>
    </div>

    <div class="flex-w flex-c-m m-tb-10">
        <div class="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search">
            <i class="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
            <i class="icon-close-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-close dis-none"></i>
            Search
        </div>
    </div>

    <!-- Search product -->
    <div class="dis-none panel-search w-full p-t-10 p-b-15">
        <div class="bor8 dis-flex p-l-15">
            <button class="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04">
                <i class="zmdi zmdi-search"></i>
            </button>

            <input class="mtext-107 cl2 size-114 plh2 p-r-15" type="text" id="select" name="search-product" placeholder="Search">
        </div>
    </div>
</div>

<div class="row isotope-grid">
    @{
        <div id="productSection">
            @await Component.InvokeAsync("DisplayProducts")
        </div>
    }
</div>



<div class="wrap-modal1 js-modal1 p-t-60 p-b-20">
    <div id="ModalArea"></div>
</div>

<!-- Load more -->
<div class="flex-c-m flex-w w-full p-t-45">
    <a id="loadmoreBtn" href="#" class="flex-c-m stext-101 cl5 size-103 bg2 bor1 hov-btn1 p-lr-15 trans-04">
        Load More
    </a>
</div>



@section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-3-typeahead/4.0.2/bootstrap3-typeahead.min.js" integrity="sha512-HWlJyU4ut5HkEj0QsK/IxBCY55n5ZpskyjVlAoV9Z7XQwwkqXoYdCIC93/htL3Gu5H3R4an/S0h2NXfbZk3g7w==" crossorigin="anonymous"></script>

    <script>
            $(function () {
                $("#select").typeahead({
                    minLength: 3,
                    source: function (request, response) {
                        $.ajax({
                            url: "@Url.Action("ItemToJson", "Home")",
                            data: {
                                "s": request
                            },
                            type: "GET",
                            contentType: "json",
                            success: function (data) {
                                items = [];
                                map = {};
                                $.each(data, function (i, item) {
                                    items.push(item);
                                });
                                response(items);
                            },
                            error: function (response) {
                                alert(response.responseText);
                            },
                            failure: function (response) {
                                alert(response.responseText);
                            }
                        });
                    },
                    highlighter: Object,
                    displayText: function (item) {
                        let imgPath = item.imagePath.replace("~/", "");
                        return `<img src="${imgPath}" class="w-25"/>` + '<span class="dropdown-item-extra ml-4">' + item.productName + '</span>'
                    },
                    afterSelect: function (data) {
                        $("#select").val(data.productName).change();
                    }
                });



                //Sự kiện click của nút loadmore khi bấm vào sẽ gửi html trả về vào isotome-grid
                //isotome-grid là container chứa các isotome-item
                var currentPage = 1;
                $('#loadmoreBtn').click(function (e) {
                    $.post("@Url.Action("DisplayProduct", "Home")", { "id": currentPage + 1 },
                        function (data) {
                            currentPage++;
                            var $topeContainer = $('.isotope-grid');
                            var $content = $(`${data}`);
                            $content.imagesLoaded(function () {
                            $topeContainer.append($content).isotope('appended', $content);
                            });
                        });
                    e.preventDefault();
                });

                //sự kiện scroll tham khảo từ : https://dev.to/sakun/a-super-simple-implementation-of-infinite-scrolling-3pnd
                $(window).on("scroll", function () {
                    //get vị trí scroll hiện tại và vị trí của scroll hiện tại so với đỉnh màn hình
                    var scrollHeight = $(document).height();
                    var scrollPos = $(window).height() + $(window).scrollTop();
                    //sự kiện sẽ xảy ra khi cách đáy browser 500px
                    if (((scrollHeight - 500) >= scrollPos) / scrollHeight == 0) {
                        $('#loadmoreBtn').click();
                    }
                });
    });
    </script>
} 